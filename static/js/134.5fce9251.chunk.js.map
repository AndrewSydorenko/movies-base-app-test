{"version":3,"file":"static/js/134.5fce9251.chunk.js","mappings":"oNAKMA,EAAYC,EAAAA,GAAAA,IAAH,oUAgFf,UA7DA,WACE,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MA4BjB,OA1BAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRC,EAAW,UAAGL,EAAaM,IAAI,gBAApB,QAAgC,GAC7CD,IACFE,EAAAA,EAAAA,IAAaF,GAAaG,MAAK,SAAAC,GACzBA,GACFX,EAAUW,EAEb,GAEJ,GAAE,CAACT,KAkBF,UAACR,EAAD,YACE,2CACA,kBAAMkB,SAlBW,SAAAC,GAGnB,GAFAA,EAAMC,iBAEQ,KAAVjB,EACF,OAAOM,EAAgB,CAAC,GAE1BA,EAAgB,CAAEN,MAAAA,KAElBY,EAAAA,EAAAA,IAAaZ,GAAOa,MAAK,SAAAC,GACnBA,GACFX,EAAUW,EAEb,GACF,EAKG,WACE,kBACEI,KAAK,OACLC,YAAY,uBACZC,MAAOpB,EACPqB,SAAU,SAAAL,GAAK,OAAIf,EAASe,EAAMM,OAAOF,MAA1B,KAEjB,mBAAQF,KAAK,SAAb,wBAEF,wBACGhB,EAAOqB,KAAI,SAAAC,GAAK,OACf,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMrB,GAAhD,WACE,gBACEsB,IAAG,yCAAoCL,EAAMM,aAC7CC,IAAKP,EAAMQ,SAEb,wBAAKR,EAAMQ,YANNR,EAAME,GADA,QAcxB,C","sources":["pages/Movies.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useSearchParams, Link, useLocation } from 'react-router-dom';\nimport { searchMovies } from '../components/api';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  margin-bottom: 16px;\n  > ul,\n  li {\n    list-style: none;\n  }\n  > ul {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nfunction Movies() {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    const paramsQuery = searchParams.get('query') ?? '';\n    if (paramsQuery) {\n      searchMovies(paramsQuery).then(data => {\n        if (data) {\n          setMovies(data);\n        }\n      });\n    }\n  }, [searchParams]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (query === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query });\n\n    searchMovies(query).then(data => {\n      if (data) {\n        setMovies(data);\n      }\n    });\n  };\n\n  return (\n    <Container>\n      <h1>Search Movies</h1>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Search for movies...\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movies.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n                alt={movie.title}\n              />\n              <h3>{movie.title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </Container>\n  );\n}\n\nexport default Movies;\n"],"names":["Container","styled","useState","query","setQuery","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","useEffect","paramsQuery","get","searchMovies","then","data","onSubmit","event","preventDefault","type","placeholder","value","onChange","target","map","movie","to","id","state","from","src","poster_path","alt","title"],"sourceRoot":""}